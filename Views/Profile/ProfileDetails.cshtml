@model Business.ProfileModel

@{
    ViewBag.Title = "ProfileDetails";
    Layout = "~/Views/Shared/AfterLoginView.cshtml";
}
<div class="" style="background-image:url('../../Images/Profile.jpg'); background-size:cover; height:600px; width:100%;">
    <br />
    <div class="container-fluid" style="">
        @using (Html.BeginForm("ProfileDetails1", "Profile", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="col-md-2"></div>
            <h2 style="color:white;">Profile Details</h2>
            <br />
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @Value = Model.Name, @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @Value = Model.Email, @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", @Value = Model.Contact, @min = 5999999999, @max = 9999999999 } })
                        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @Value = Model.Gender, @readonly = "readonly" } })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @Value = Model.Address } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Wallet, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Wallet, new { htmlAttributes = new { @class = "form-control", @Value = Model.Wallet, @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Wallet, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
